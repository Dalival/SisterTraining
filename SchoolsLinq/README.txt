Привет. Будем закреплять LINQ. 
Работать будем с твоим предыдущим проектом. Где школа, ученики, учителя и так далее.

Создай коллекцию школ. С ней мы и будем работать дальше. Школ должно быть несколько и в них должны быть учителя, ученики. Короче, позаботься о создании сущностей с разными входными данными.

Все следующие задания делать через LINQ!

1. Сосчитать школы, которые из Бреста. Сколько их?

2. Взять только те школы, в которых не менее 5 учеников и не менее 3 учителей.

3. Найти школу, у который самый низкий общий средний балл по школе.

4. Найти школу, в которой работает учитель физики, чье имя начинается на букву Б. Если школ было найдено несколько, взять первую из найденных.

5. Из коллекции школ сделать коллекцию учителей. То есть коллекцию всех учителей из всех школ.

6. Найти среди всех школ самого крутого ученика (у которого наиболее высокий средний балл). При этом считаются только те ученики, у которых средний балл >= 8.

7. Из коллекции школ сделать коллекцию оценок. То есть взять абсолютно все оценки абсолютно всех учеников абсолютно всех школ. Отсортировать оценки по убыванию. Убрать дубликаты. По идее должен получиться список оценок от 10 до 0, только в нём не будет какой-то оценки, если таковая ни разу никем не была выставлена.

Теперь задания со звездочкой 

8. Выбрать школу, в которой работает наибольшее количество учителей на одном предмете. Например, у нас во всех школах предмет ведут максимум два учителя. Два математика, один физик, два химика, один физрук и так далее. Но есть одна школа, в которой аж четверо учителей ведут русский язык. Вот значит эту школу и берем. В конце нужно чтобы получилась не школа, а коллекция учителей, которые вместе ведут этот предмет. То есть в нашем случае надо чтобы получилась коллекция из четырех учителей русского языка.

9. Отсортировать школы по самому популярному имени в школе. То есть берем школу А. В ней две Сони (считаем и учеников, и учителей), два Егора, шестеро Иванов. То есть самое популярное имя в школе - Иван. В другой школе самое популярное имя, допустим, получится Анастасия. Значит вторая школа будет раньше, чем первая (так как мы сортируем по самому популярному имени, а имя Анастасия начинается с буквы А, то есть оно будет первым).

10. Создать функцию, которая принимает в качестве параметра коллекцию школ и название предмета. Она должна вернуть учителя по этому предмету. Если учителей по этому предмету найдено несколько, вернуть того, у которого в фамилии больше всего букв.
